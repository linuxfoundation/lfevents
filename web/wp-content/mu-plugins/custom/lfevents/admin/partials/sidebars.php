<?php
/**
 * Sidebar definitions
 *
 * @link       https://events.linuxfoundation.org/
 * @since      1.1.0
 *
 * @package    Lf_Mu
 * @subpackage Lf_Mu/admin/partials
 */

// If this file is called directly, abort.
if ( ! defined( 'WPINC' ) ) {
	die;
}

// First we define the sidebar with it's tabs, panels and settings.
$palette = array(
	'dark-fuschia'     => '#6e1042',
	'dark-violet'      => '#411E4F',
	'dark-indigo'      => '#1A267D',
	'dark-blue'        => '#17405c',
	'dark-aqua'        => '#0e5953',
	'dark-green'       => '#0b5329',

	'light-fuschia'    => '#AD1457',
	'light-violet'     => '#6C3483',
	'light-indigo'     => '#4653B0',
	'light-blue'       => '#2874A6',
	'light-aqua'       => '#148f85',
	'light-green'      => '#117a3d',

	'dark-chartreuse'  => '#3d5e0f',
	'dark-yellow'      => '#878700',
	'dark-gold'        => '#8c7000',
	'dark-orange'      => '#784e12',
	'dark-umber'       => '#6E2C00',
	'dark-red'         => '#641E16',

	'light-chartreuse' => '#699b23',
	'light-yellow'     => '#b0b000',
	'light-gold'       => '#c29b00',
	'light-orange'     => '#c2770e',
	'light-umber'      => '#b8510d',
	'light-red'        => '#922B21',
);

$sidebar = array(
	'id'              => 'lfevent-sidebar-event',
	'id_prefix'       => 'lfes_',
	'label'           => __( 'Event Settings' ),
	'post_type'       => $this->post_types,
	'data_key_prefix' => 'lfes_',
	'icon_dashicon'   => 'format-gallery',
	'tabs'            => array(
		array(
			'label'  => __( 'Tab label' ),
			'panels' => array(
				array(
					'label'        => __( 'General' ),
					'initial_open' => false,
					'settings'     => array(
						array(
							'type'          => 'textarea',
							'id'            => 'description',
							'data_type'     => 'meta',
							'data_key'      => 'description',
							'label'         => __( 'Event description' ),
							'help'          => __( 'Use markdown for links and bullets' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => 'The Cloud Native Computing Foundationâ€™s flagship conference gathers adopters and technologists from leading open source and cloud native communities in San Diego, California from November 18-21, 2019. Join Kubernetes, Prometheus, Envoy, CoreDNS, containerd, Fluentd, OpenTracing, gRPC, rkt, CNI, Jaeger, Notary, TUF, Vitess, NATS, Linkerd, Helm, Rook, Harbor, etcd, Open Policy Agent, and CRI-O as the community gathers for four days to further the education and advancement of cloud native computing.',
						),
						array(
							'type'          => 'text',
							'id'            => 'date_start',
							'data_type'     => 'meta',
							'data_key'      => 'date_start',
							'label'         => __( 'Event start date' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => 'YYYY/MM/DD',
						),
						array(
							'type'          => 'text',
							'id'            => 'date_end',
							'data_type'     => 'meta',
							'data_key'      => 'date_end',
							'label'         => __( 'Event end date' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => 'YYYY/MM/DD',
						),
						array(
							'type'          => 'text',
							'id'            => 'external_url',
							'data_type'     => 'meta',
							'data_key'      => 'external_url',
							'label'         => __( 'URL to External Event site' ),
							'help'          => __( 'Set this value only when the Event site is located on an external site.' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => 'https://www.cloudfoundry.org/event/summit/',
						),
						array(
							'type'          => 'text',
							'id'            => 'event_email',
							'data_type'     => 'meta',
							'data_key'      => 'event_email',
							'label'         => __( 'Event Email' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'help'          => __( 'Set this value to override the email in the footer legal text.' ),
							'default_value' => '',
							'placeholder'   => 'events@cncf.io',
						),
						array(
							'type'          => 'text',
							'id'            => 'dropdown_title',
							'data_type'     => 'meta',
							'data_key'      => 'dropdown_title',
							'label'         => __( 'Dropdown Title' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'help'          => __( 'Set this value to override the Event title in the form dropdowns.' ),
							'default_value' => '',
							'placeholder'   => 'Open Source Summit + Embedded Linux Conference',
						),
					),
				),
				array(
					'label'        => __( 'Design' ),
					'initial_open' => false,
					'settings'     => array(
						array(
							'type'          => 'image',
							'id'            => 'white_logo',
							'data_type'     => 'meta',
							'data_key'      => 'white_logo',
							'label'         => __( 'White logo' ),
							'register_meta' => true,
							'ui_border_top' => true,
						),
						array(
							'type'          => 'image',
							'id'            => 'black_logo',
							'data_type'     => 'meta',
							'data_key'      => 'black_logo',
							'label'         => __( 'Black logo' ),
							'register_meta' => true,
							'ui_border_top' => false,
						),
						array(
							'type'          => 'color',
							'id'            => 'menu_color',
							'data_type'     => 'meta',
							'data_key'      => 'menu_color',
							'label'         => __( 'Menu Background Color' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '#222222',
							'alpha_control' => false,
							'palette'       => $palette,
						),
						array(
							'type'          => 'color',
							'id'            => 'menu_color_2',
							'data_type'     => 'meta',
							'data_key'      => 'menu_color_2',
							'label'         => __( 'Menu Gradient Color' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => 'transparent',
							'alpha_control' => false,
							'palette'       => $palette,
						),
						array(
							'type'          => 'color',
							'id'            => 'menu_color_3',
							'data_type'     => 'meta',
							'data_key'      => 'menu_color_3',
							'label'         => __( 'Menu Dropdown Color' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => 'transparent',
							'alpha_control' => false,
							'palette'       => $palette,
						),
						array(
							'type'          => 'radio',
							'id'            => 'menu_text_color',
							'data_type'     => 'meta',
							'data_key'      => 'menu_text_color',
							'label'         => __( 'Menu Text Color' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => 'white',
							'alpha_control' => false,
							'options'       => array(
								'white' => __( 'White' ),
								'black' => __( 'Black' ),
							),
						),
						array(
							'type'          => 'image',
							'id'            => 'favicon',
							'data_type'     => 'meta',
							'data_key'      => 'favicon',
							'label'         => __( 'Favicon' ),
							'help'          => __( 'Should be a 32x32 png file. Use realfavicongenerator.net.' ),
							'register_meta' => true,
							'ui_border_top' => true,
						),
						array(
							'type'          => 'range',
							'id'            => 'overlay_strength',
							'data_type'     => 'meta',
							'data_key'      => 'overlay_strength',
							'label'         => __( 'Subpage Hero Overlay Strength', 'my_plugin' ),
							'help'          => __( '100% is a normal color overlay; 0% is no overlay; 150% extra strong overlay', 'my_plugin' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => 100,
							'step'          => 1,
							'min'           => 0,
							'max'           => 150,
						),
						array(
							'type'          => 'checkbox',
							'id'            => 'cncf_font',
							'data_type'     => 'meta',
							'data_key'      => 'cncf_font',
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => false,
							'use_toggle'    => false,
							'input_label'   => __( 'Use CNCF font' ),
						),
					),
				),
				array(
					'label'        => __( 'Location' ),
					'initial_open' => false,
					'settings'     => array(
						array(
							'type'          => 'checkbox',
							'id'            => 'virtual',
							'data_type'     => 'meta',
							'data_key'      => 'virtual',
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => false,
							'use_toggle'    => false,
							'input_label'   => __( 'Virtual' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'city',
							'data_type'     => 'meta',
							'data_key'      => 'city',
							'label'         => __( 'City' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => __( 'Paris' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'venue',
							'data_type'     => 'meta',
							'data_key'      => 'venue',
							'label'         => __( 'Venue' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => __( 'San Diego Convention Center' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'street_address',
							'data_type'     => 'meta',
							'data_key'      => 'street_address',
							'label'         => __( 'Street Address' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => __( '2635 Homestead Rd' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'postal_code',
							'data_type'     => 'meta',
							'data_key'      => 'postal_code',
							'label'         => __( 'Postal Code' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => __( '95051' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'region',
							'data_type'     => 'meta',
							'data_key'      => 'region',
							'label'         => __( 'Province/State' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => __( 'CA' ),
						),
					),
				),
				array(
					'label'        => __( 'Call for Proposal' ),
					'initial_open' => false,
					'settings'     => array(
						array(
							'type'          => 'checkbox',
							'id'            => 'cfp_active',
							'data_type'     => 'meta',
							'data_key'      => 'cfp_active',
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => true,
							'use_toggle'    => false,
							'input_label'   => __( 'CFP for Event' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'cfp_date_start',
							'data_type'     => 'meta',
							'data_key'      => 'cfp_date_start',
							'label'         => __( 'CFP start date' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => 'YYYY/MM/DD',
						),
						array(
							'type'          => 'text',
							'id'            => 'cfp_date_end',
							'data_type'     => 'meta',
							'data_key'      => 'cfp_date_end',
							'label'         => __( 'CFP end date' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => 'YYYY/MM/DD',
						),
					),
				),
				array(
					'label'        => __( 'Social' ),
					'initial_open' => false,
					'settings'     => array(
						array(
							'type'          => 'text',
							'id'            => 'hashtag',
							'data_type'     => 'meta',
							'data_key'      => 'hashtag',
							'label'         => __( 'Hashtag for event' ),
							'help'          => __( 'Write hashtag here or other text to be associated with the social media icons.' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( '#KubeCon' ),
						),
						array(
							'type'          => 'image',
							'id'            => 'wechat',
							'data_type'     => 'meta',
							'data_key'      => 'wechat',
							'label'         => __( 'WeChat QR code' ),
							'register_meta' => true,
							'ui_border_top' => true,
						),
						array(
							'type'          => 'text',
							'id'            => 'linkedin',
							'data_type'     => 'meta',
							'data_key'      => 'linkedin',
							'label'         => __( 'LinkedIn URL' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'https://www.linkedin.com/company/cloud-native-computing-foundation' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'qq',
							'data_type'     => 'meta',
							'data_key'      => 'qq',
							'label'         => __( 'QQ URL' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'http://v.qq.com/vplus/dbc4895dfc0a6ec609ad9e42a10507e0/videos' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'youtube',
							'data_type'     => 'meta',
							'data_key'      => 'youtube',
							'label'         => __( 'YouTube URL' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'facebook',
							'data_type'     => 'meta',
							'data_key'      => 'facebook',
							'label'         => __( 'Facebook URL' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'https://www.facebook.com/CloudNativeComputingFoundation/' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'twitter',
							'data_type'     => 'meta',
							'data_key'      => 'twitter',
							'label'         => __( 'Twitter/X URL' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'https://twitter.com/CloudNativeFdn' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'bluesky',
							'data_type'     => 'meta',
							'data_key'      => 'bluesky',
							'label'         => __( 'Bluesky' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'https://bsky.app/profile/cncf.io' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'github',
							'data_type'     => 'meta',
							'data_key'      => 'github',
							'label'         => __( 'GitHub URL' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'https://github.com/LF-Engineering/' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'instagram',
							'data_type'     => 'meta',
							'data_key'      => 'instagram',
							'label'         => __( 'Instagram URL' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'https://www.instagram.com/linux_foundation/' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'twitch',
							'data_type'     => 'meta',
							'data_key'      => 'twitch',
							'label'         => __( 'Twitch URL' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'https://www.twitch.tv/cloudnativefdn' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'slack',
							'data_type'     => 'meta',
							'data_key'      => 'slack',
							'label'         => __( 'Slack URL' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'https://slack.cncf.io/' ),
						),
					),
				),
				array(
					'label'        => __( 'Homepage Tile' ),
					'initial_open' => false,
					'settings'     => array(
						array(
							'type'          => 'text',
							'id'            => 'cta_register_url',
							'data_type'     => 'meta',
							'data_key'      => 'cta_register_url',
							'label'         => __( 'CTA Register URL' ),
							'help'          => __( 'This CTA button will be displayed until the Event end date.' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/register/' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'cta_speak_url',
							'data_type'     => 'meta',
							'data_key'      => 'cta_speak_url',
							'label'         => __( 'CTA Speak URL' ),
							'help'          => __( 'This CTA button will be displayed during the Call For Proposal date range.' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/cfp/' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'cta_sponsor_url',
							'data_type'     => 'meta',
							'data_key'      => 'cta_sponsor_url',
							'label'         => __( 'CTA Sponsor URL' ),
							'help'          => __( 'This CTA button will be displayed whenever a url is provided and until the following end date, if one is provided:' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/sponsors/become-and-sponsor/' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'cta_sponsor_date_end',
							'data_type'     => 'meta',
							'data_key'      => 'cta_sponsor_date_end',
							'label'         => __( 'CTA Sponsor end date' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => 'YYYY/MM/DD',
						),
						array(
							'type'          => 'text',
							'id'            => 'cta_schedule_url',
							'data_type'     => 'meta',
							'data_key'      => 'cta_schedule_url',
							'label'         => __( 'CTA Schedule URL' ),
							'help'          => __( 'This CTA button will be displayed whenever a url is provided.' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/schedule/' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'cta_videos_url',
							'data_type'     => 'meta',
							'data_key'      => 'cta_videos_url',
							'label'         => __( 'CTA Videos URL' ),
							'help'          => __( 'This CTA button will be displayed whenever a url is provided.' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'https://www.youtube.com/watch?v=1u5LtsJqyrA&list=PLj6h78yzYM2N8nw1YcqqKveySH6_0VnI0' ),
						),
					),
				),
				array(
					'label'        => __( 'Newsletter' ),
					'initial_open' => false,
					'settings'     => array(
						array(
							'type'          => 'textarea',
							'id'            => 'form_title',
							'data_type'     => 'meta',
							'data_key'      => 'form_title',
							'label'         => __( 'Form Title text' ),
							'help'          => __( 'If this is set, this will override default form title.' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'Join our mailing list to hear all the latest about events, news and more.' ),
						),
						array(
							'type'          => 'textarea',
							'id'            => 'form_privacy',
							'data_type'     => 'meta',
							'data_key'      => 'form_privacy',
							'label'         => __( 'Privacy Notice text' ),
							'help'          => __( 'If this is set, it will override default privacy link. Use markdown to include privacy policy link.' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'By submitting this form you are consenting to receive marketing emails about news, events, and training from The Linux Foundation. You can unsubscribe at any time by following the "Subscription Center" link included within such communications. For information on our privacy practices and commitment to protecting your privacy, please review our [Privacy Policy](https://www.linuxfoundation.org/privacy/). We do not sell your contact information to third parties.' ),
						),
						array(
							'type'          => 'textarea',
							'id'            => 'form_hubspot_id',
							'data_type'     => 'meta',
							'data_key'      => 'form_hubspot_id',
							'label'         => __( 'HubSpot Form ID' ),
							'help'          => __( 'If this is set, it will override default newsletter form in the footer with one unique to this event.' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( '8f7a4a51-660e-49c9-b599-0a325fa23669' ),
						),
					),
				),
				array(
					'label'        => __( 'Alert Bar' ),
					'initial_open' => false,
					'settings'     => array(
						array(
							'type'          => 'textarea',
							'id'            => 'alert_text',
							'data_type'     => 'meta',
							'data_key'      => 'alert_text',
							'label'         => __( 'Alert Message' ),
							'help'          => __( 'Links should be written in markdown format [like this](https://google.com)' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
						),
						array(
							'type'          => 'text',
							'id'            => 'alert_expiry_date',
							'data_type'     => 'meta',
							'data_key'      => 'alert_expiry_date',
							'label'         => __( 'Expiry Date' ),
							'help'          => __( 'Optional' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => 'YYYY/MM/DD',
						),
						array(
							'type'          => 'color',
							'id'            => 'alert_text_color',
							'data_type'     => 'meta',
							'data_key'      => 'alert_text_color',
							'label'         => __( 'Text Color' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '#222222',
							'alpha_control' => false,
							'palette'       => array(
								'white' => '#ffffff',
								'black' => '#000000',
							),
						),
						array(
							'type'          => 'color',
							'id'            => 'alert_background_color',
							'data_type'     => 'meta',
							'data_key'      => 'alert_background_color',
							'label'         => __( 'Background Color' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '#222222',
							'alpha_control' => false,
							'palette'       => $palette,
						),

					),
				),
				array(
					'label'        => __( 'Advanced' ),
					'initial_open' => false,
					'settings'     => array(
						array(
							'type'          => 'radio',
							'id'            => 'hide_from_listings',
							'data_type'     => 'meta',
							'data_key'      => 'hide_from_listings',
							'label'         => __( 'Hide from Homepage and Calendars' ),
							'help'          => __( 'This will hide the Event from the homepage and calendars.' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => 'show',
							'options'       => array(
								'show' => __( 'Show' ),
								'hide' => __( 'Hide' ),
							),
						),
						array(
							'type'          => 'radio',
							'id'            => 'event_has_passed',
							'data_type'     => 'meta',
							'data_key'      => 'event_has_passed',
							'label'         => __( 'Event Has Passed' ),
							'help'          => __( 'This value will update automatically so no need to touch it.' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '0',
							'options'       => array(
								'1' => __( 'True' ),
								'0' => __( 'False' ),
							),
						),
						array(
							'type'          => 'text',
							'id'            => 'related_events',
							'data_type'     => 'meta',
							'data_key'      => 'related_events',
							'label'         => __( 'Related Events Override' ),
							'help'          => __( 'This is a comma-delimited list of Event IDs that, when set, will be listed instead of the normal related Events in the View All Events menu.' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( '1365,2122,3112' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'extra_vae_link_text',
							'data_type'     => 'meta',
							'data_key'      => 'extra_vae_link_text',
							'label'         => __( 'Extra View All Events Link' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'CNCF Homepage' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'extra_vae_link_url',
							'data_type'     => 'meta',
							'data_key'      => 'extra_vae_link_url',
							'label'         => __( 'Link URL' ),
							'help'          => __( 'This extra link will appear second in the View All Events dropdown.' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => __( 'https://www.cncf.io/' ),
						),
						array(
							'type'          => 'checkbox',
							'id'            => 'hide_all_upcoming_link',
							'data_type'     => 'meta',
							'data_key'      => 'hide_all_upcoming_link',
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => false,
							'use_toggle'    => false,
							'input_label'   => __( 'Hide "All Upcoming Events" link' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'sched_event_id',
							'data_type'     => 'meta',
							'data_key'      => 'sched_event_id',
							'label'         => 'Sched Event ID',
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => 'kccncna2024',
						),
						array(
							'type'          => 'text',
							'id'            => 'sched_event_api_key',
							'data_type'     => 'meta',
							'data_key'      => 'sched_event_api_key',
							'label'         => 'Sched Event API Key',
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => '84d755edbd943d009fbd27d557f27a37',
						),
					),
				),
			),
		),
	),
);

// Push the $sidebar we just assigned to the variable
// to the array of $sidebars that comes in the function argument.
$sidebars[] = $sidebar;

$sidebar = array(
	'id'              => 'lfevent-sidebar-page',
	'id_prefix'       => 'lfes_',
	'label'           => __( 'Page Settings' ),
	'post_type'       => $this->post_types,
	'data_key_prefix' => 'lfes_',
	'icon_dashicon'   => 'media-spreadsheet',
	'tabs'            => array(
		array(
			'label'  => __( 'Tab label' ),
			'panels' => array(
				array(
					'label'        => __( 'General' ),
					'initial_open' => true,
					'settings'     => array(
						array(
							'type'          => 'checkbox',
							'id'            => 'hide_from_menu',
							'data_type'     => 'meta',
							'data_key'      => 'hide_from_menu',
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => false,
							'use_toggle'    => false,
							'input_label'   => __( 'Hide from Event menu' ),
							'help'          => __( 'This will stop this particular page from showing on the Event top navigation menu.' ),
						),
						array(
							'type'          => 'checkbox',
							'id'            => 'hide_header',
							'data_type'     => 'meta',
							'data_key'      => 'hide_header',
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => false,
							'use_toggle'    => false,
							'input_label'   => __( 'Hide normal subpage heading', 'my_plugin' ),
							'help'          => __( 'This is useful when creating alternate landing pages for the event.' ),
						),
						array(
							'type'          => 'checkbox',
							'id'            => 'splash_page',
							'data_type'     => 'meta',
							'data_key'      => 'splash_page',
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => false,
							'use_toggle'    => false,
							'input_label'   => __( 'Splash Page' ),
							'help'          => __( 'This will make the page display a minimal topnav appropriate for an event splash page.' ),
						),
						array(
							'type'          => 'checkbox',
							'id'            => 'hide_sponsors',
							'data_type'     => 'meta',
							'data_key'      => 'hide_sponsors',
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => false,
							'use_toggle'    => false,
							'input_label'   => __( 'Hide Sponsors' ),
							'help'          => __( 'This will stop the sponsors list from appearing at the bottom of the page.' ),
						),
						array(
							'type'          => 'checkbox',
							'id'            => 'open_new_tab',
							'data_type'     => 'meta',
							'data_key'      => 'open_new_tab',
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => false,
							'use_toggle'    => false,
							'input_label'   => __( 'Open page in new tab' ),
							'help'          => __( 'This will open the page in a new tab from the topnav menu.' ),
						),
					),
				),
			),
		),
	),
);

// Push the $sidebar we just assigned to the variable
// to the array of $sidebars that comes in the function argument.
$sidebars[] = $sidebar;

$sidebar = array(
	'id'              => 'lfe-speaker-sidebar',
	'id_prefix'       => 'lfes_speaker_',
	'label'           => __( 'Speaker Details' ),
	'post_type'       => array( 'lfe_speaker' ),
	'data_key_prefix' => 'lfes_speaker_',
	'icon_dashicon'   => 'admin-users',
	'tabs'            => array(
		array(
			'label'  => __( 'Tab label' ),
			'panels' => array(
				array(
					'label'    => __( 'Speaker Details' ),
					'settings' => array(
						array(
							'type'          => 'text',
							'id'            => 'job_title',
							'data_type'     => 'meta',
							'data_key'      => 'job_title',
							'label'         => __( 'Job Title' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => __( 'Senior Software Engineer' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'company',
							'data_type'     => 'meta',
							'data_key'      => 'company',
							'label'         => __( 'Company' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => __( 'Microsoft' ),
						),
						array(
							'type'          => 'image',
							'id'            => 'company_logo',
							'data_type'     => 'meta',
							'data_key'      => 'company_logo',
							'label'         => __( 'Company logo' ),
							'register_meta' => true,
							'ui_border_top' => false,
						),
						array(
							'type'          => 'text',
							'id'            => 'linkedin',
							'data_type'     => 'meta',
							'data_key'      => 'linkedin',
							'label'         => __( 'LinkedIn URL' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'https://www.linkedin.com/in/username/' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'twitter',
							'data_type'     => 'meta',
							'data_key'      => 'twitter',
							'label'         => __( 'Twitter/X URL' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => __( 'https://twitter.com/username' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'bluesky',
							'data_type'     => 'meta',
							'data_key'      => 'bluesky',
							'label'         => __( 'Bluesky' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => __( 'https://bsky.app/profile/cncf.io' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'github',
							'data_type'     => 'meta',
							'data_key'      => 'github',
							'label'         => __( 'GitHub URL' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => __( 'https://github.com/username' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'website',
							'data_type'     => 'meta',
							'data_key'      => 'website',
							'label'         => __( 'Website URL' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => __( 'https://cncf.io' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'sched_username',
							'data_type'     => 'meta',
							'data_key'      => 'sched_username',
							'label'         => __( 'Sched username' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
						),
						array(
							'type'          => 'text',
							'id'            => 'title',
							'data_type'     => 'meta',
							'data_key'      => 'title',
							'label'         => __( '!!!OLD!!! Title, Company' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'For old speakers block' ),
							'help'          => __( 'This field is deprecated and is only used for the old Speakers block.' ),
						),
					),
				),
			),
		),
	),
);

// Push the $sidebar we just assigned to the variable
// to the array of $sidebars that comes in the function argument.
$sidebars[] = $sidebar;

$sidebar = array(
	'id'              => 'lfe-staff-sidebar',
	'id_prefix'       => 'lfes_staff_',
	'label'           => __( 'Staff Details' ),
	'post_type'       => array( 'lfe_staff' ),
	'data_key_prefix' => 'lfes_staff_',
	'icon_dashicon'   => 'admin-users',
	'tabs'            => array(
		array(
			'label'  => __( 'Tab label' ),
			'panels' => array(
				array(
					'label'    => __( 'Staff Details' ),
					'settings' => array(
						array(
							'type'          => 'text',
							'id'            => 'title',
							'data_type'     => 'meta',
							'data_key'      => 'title',
							'label'         => __( 'Title' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => __( 'Title' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'order',
							'data_type'     => 'meta',
							'data_key'      => 'order',
							'label'         => __( 'Order' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( '1' ),
							'help'          => __( 'Enter a number if you want to have that person listed ahead of others' ),
						),
					),
				),
			),
		),
	),
);

// Push the $sidebar we just assigned to the variable
// to the array of $sidebars that comes in the function argument.
$sidebars[] = $sidebar;

$sidebar = array(
	'id'              => 'lfe-sponsor-sidebar',
	'id_prefix'       => 'lfes_sponsor_',
	'label'           => __( 'Sponsor Details' ),
	'post_type'       => array( 'lfe_sponsor' ),
	'data_key_prefix' => 'lfes_sponsor_',
	'icon_dashicon'   => 'star-filled',
	'tabs'            => array(
		array(
			'label'  => __( 'Tab label' ),
			'panels' => array(
				array(
					'label'    => __( 'Sponsor Details' ),
					'settings' => array(
						array(
							'type'          => 'text',
							'id'            => 'url',
							'data_type'     => 'meta',
							'data_key'      => 'url',
							'label'         => __( 'Forwarding URL' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => __( 'https://cloud.google.com/' ),
						),
						array(
							'type'          => 'range',
							'id'            => 'size',
							'data_type'     => 'meta',
							'data_key'      => 'size',
							'label'         => __( 'Size Adjustment %' ),
							'help'          => __( '100% is a normal sized logo; 80% is smaller; 120% is larger' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => 100,
							'step'          => 1,
							'min'           => 50,
							'max'           => 150,
						),
						array(
							'type'          => 'text',
							'id'            => 'alt_text',
							'data_type'     => 'meta',
							'data_key'      => 'alt_text',
							'label'         => __( 'Alternative Display Name' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'help'          => __( 'This field only needs to be filled in if the title of the post is not acceptable for public display. The Alternative Dispay Name should only describe the sponsors name. Do not add any extraneous text. This field is public and stops the post title from being used.' ),
							'placeholder'   => __( 'Google' ),
						),
					),
				),
			),
		),
	),
);

// Push the $sidebar we just assigned to the variable
// to the array of $sidebars that comes in the function argument.
$sidebars[] = $sidebar;

$sidebar = array(
	'id'              => 'lfevent-sidebar',
	'id_prefix'       => 'lfes_community_',
	'label'           => __( 'Event Settings' ),
	'post_type'       => 'lfe_community_event',
	'data_key_prefix' => 'lfes_community_',
	'icon_dashicon'   => 'list-view',
	'tabs'            => array(
		array(
			'label'  => __( 'Tab label' ),
			'panels' => array(
				array(
					'label'        => __( 'General' ),
					'initial_open' => true,
					'settings'     => array(
						array(
							'type'          => 'checkbox',
							'id'            => 'virtual',
							'data_type'     => 'meta',
							'data_key'      => 'virtual',
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => false,
							'use_toggle'    => false,
							'input_label'   => __( 'Virtual' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'city',
							'data_type'     => 'meta',
							'data_key'      => 'city',
							'label'         => __( 'City' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => __( 'Paris' ),
						),
						array(
							'type'          => 'text',
							'id'            => 'date_start',
							'data_type'     => 'meta',
							'data_key'      => 'date_start',
							'label'         => __( 'Event start date' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => 'YYYY/MM/DD',
						),
						array(
							'type'          => 'text',
							'id'            => 'date_end',
							'data_type'     => 'meta',
							'data_key'      => 'date_end',
							'label'         => __( 'Event end date' ),
							'register_meta' => true,
							'ui_border_top' => false,
							'default_value' => '',
							'placeholder'   => 'YYYY/MM/DD',
						),
						array(
							'type'          => 'text',
							'id'            => 'external_url',
							'data_type'     => 'meta',
							'data_key'      => 'external_url',
							'label'         => __( 'URL to Community Event site' ),
							'register_meta' => true,
							'ui_border_top' => true,
							'default_value' => '',
							'placeholder'   => 'https://www.cloudfoundry.org/event/summit/',
						),
					),
				),
			),
		),
	),
);

// Push the $sidebar we just assigned to the variable
// to the array of $sidebars that comes in the function argument.
$sidebars[] = $sidebar;
